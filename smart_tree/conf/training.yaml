# @package: _global_

defaults:
  - override hydra/job_logging: colorlog
  - override hydra/hydra_logging: colorlog

wandb:
  project: tree
  entity: harry1576
  mode: disabled

fp16: False
num_epoch: 500
lr_decay: True
lr: 0.01
early_stop_epoch: 20
early_stop: True

batch_size: 16
directory: /mnt/harry/PhD/smart-tree/data/npz_4mm
json_path: /mnt/harry/PhD/smart-tree/smart_tree/conf/trees_II/split.json
voxel_size: 0.04
input_features : ['xyz']
target_features: ['radius', 'medial_direction', 'class_l']

cmap:
  - [0.450, 0.325, 0.164] # Trunk
  - [0.541, 0.670, 0.164] # Foliage


capture_output: 1



# Training dataset...
train_dataset:
  _target_: smart_tree.dataset.dataset.Dataset
  mode: train
  directory: ${directory}
  json_path: ${json_path}
  cache: True
  transform:
    _target_ : smart_tree.model.sparse.transform.sparse_voxelize
    _partial_ : True
    input_features: ${input_features}
    target_features: ${target_features}
    voxel_size: ${voxel_size}

train_data_loader:
  _target_: torch.utils.data.DataLoader
  batch_size: ${batch_size}
  drop_last: False
  pin_memory: False
  num_workers: 0
  shuffle: False
  # sampler:
  #   _target_: torch.utils.data.RandomSampler
  #   replacement: True
  #   num_samples: 1024
  #   data_source: ${train_dataset}
  collate_fn:
    _target_: smart_tree.model.sparse.util.batch_collate
    _partial_: True

  dataset: ${train_dataset}

# Val dataset
validation_dataset:
  _target_: smart_tree.dataset.dataset.Dataset
  mode: validation
  directory: ${directory}
  json_path: ${json_path}
  cache: True
  transform:
    _target_ : smart_tree.model.sparse.transform.sparse_voxelize
    _partial_ : True
    input_features: ${input_features}
    target_features: ${target_features}
    voxel_size: ${voxel_size}


validation_data_loader:
  _target_: torch.utils.data.DataLoader
  batch_size: ${batch_size}
  drop_last: True
  pin_memory: False
  num_workers: 0
  shuffle: False
  collate_fn:
    _target_: smart_tree.model.sparse.util.batch_collate
    _partial_: True

  dataset: ${validation_dataset}

# Test dataset
test_dataset:
  _target_: smart_tree.dataset.dataset.Dataset
  mode: test
  directory: ${directory}
  json_path: ${json_path}
  cache: True
  transform:
    _target_ : smart_tree.model.sparse.transform.sparse_voxelize
    _partial_ : True
    input_features: ${input_features}
    target_features: ${target_features}
    voxel_size: ${voxel_size}


test_data_loader:
  _target_: torch.utils.data.DataLoader
  batch_size: ${batch_size}
  drop_last: True
  pin_memory: False
  num_workers: 0
  shuffle: False
  collate_fn:
    _target_: smart_tree.model.sparse.util.batch_collate
    _partial_: True

  dataset: ${test_dataset}


model:
  _target_: smart_tree.model.sparse.model.Smart_Tree
  input_channels: 3
  unet_planes: [8, 16, 32, 64]
  mlp_layers: 2
  num_classes: 2

optimizer:
  _target_: torch.optim.Adam
  lr: ${lr}

scheduler:
  _target_: torch.optim.lr_scheduler.ReduceLROnPlateau
  mode: "min"
